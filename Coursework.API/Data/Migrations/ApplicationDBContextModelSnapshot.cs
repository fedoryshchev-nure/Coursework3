// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Models.Origin.Sensor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsBroken");

                    b.Property<string>("WallId");

                    b.HasKey("Id");

                    b.HasIndex("WallId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("Core.Models.Origin.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("HashedPassword");

                    b.Property<string>("LastName");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Models.Origin.Wall", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Walls");
                });

            modelBuilder.Entity("Core.Models.Origin.Sensor", b =>
                {
                    b.HasOne("Core.Models.Origin.Wall", "Wall")
                        .WithMany("WallSensors")
                        .HasForeignKey("WallId");
                });

            modelBuilder.Entity("Core.Models.Origin.Wall", b =>
                {
                    b.HasOne("Core.Models.Origin.User", "User")
                        .WithMany("Walls")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
